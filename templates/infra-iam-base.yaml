AWSTemplateFormatVersion: 2010-09-09
Description: IAM Roles, Groups & Policies for the IAM users

Resources:

  ## Roles ##

  AccountAdmin:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Ref 'AWS::AccountId'
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
        - !Ref ViewBillingPolicy # To deny some account-wide configuration changes
      MaxSessionDuration: 14400
      Path: /
      RoleName: account-admin

  ElevateToAccountAdmin:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: A policy that allows one to elevate to the account admin role
      ManagedPolicyName: elevate-to-account-admin
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowToAssumeAdminRole
            Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt AccountAdmin.Arn
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  PowerUserAccess:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Ref 'AWS::AccountId'
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'
        - !Ref PowerUserAccessPolicy
      MaxSessionDuration: 14400
      Path: /
      RoleName: power-user-access

  ElevateToPowerUserAccess:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: A policy that allows one to elevate to the power-user-access role
      ManagedPolicyName: elevate-to-power-user-access
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AllowToAssumePowerUserAccessRole
            Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt PowerUserAccess.Arn
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true

  ## Policies ##

  ManagePersonalIAMSettingsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allow users to manage their own IAM settings & credentials
      ManagedPolicyName: manage-personal-iam-settings
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAllUsersToListAccounts
            Effect: Allow
            Action:
              - iam:ListAccountAliases
              - iam:ListUsers
              - iam:GetAccountSummary
            Resource: '*'

          - Sid: AllowIndividualUserToSeeAndManageTheirOwnAccountInformation
            Effect: Allow
            Action:
              # Configuring console access
              - iam:ChangePassword
              - iam:CreateLoginProfile
              - iam:DeleteLoginProfile
              - iam:GetAccountPasswordPolicy
              - iam:GetLoginProfile
              - iam:UpdateLoginProfile

              # Viewing details in the console
              - iam:GetAccessKeyLastUsed
              - iam:ListAttachedUserPolicies
              - iam:ListGroupsForUser
              - iam:ListUserPolicies

              # IAM AccessKeys
              - iam:CreateAccessKey
              - iam:DeleteAccessKey
              - iam:ListAccessKeys
              - iam:UpdateAccessKey

              # IAM Signing Certificates
              - iam:DeleteSigningCertificate
              - iam:ListSigningCertificates
              - iam:UpdateSigningCertificate
              - iam:UploadSigningCertificate

              # IAM SSH Keys
              - iam:DeleteSSHPublicKey
              - iam:GetSSHPublicKey
              - iam:ListSSHPublicKeys
              - iam:UpdateSSHPublicKey
              - iam:UploadSSHPublicKey

              # IAM Service Specific Keys
              - iam:CreateServiceSpecificCredential
              - iam:DeleteServiceSpecificCredential
              - iam:ListServiceSpecificCredentials
              - iam:ResetServiceSpecificCredential
              - iam:UpdateServiceSpecificCredential

            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'

          - Sid: AllowIndividualUserToListTheirOwnMFA
            Effect: Allow
            Action:
              - iam:ListVirtualMFADevices
              - iam:ListMFADevices
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:mfa/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'

          - Sid: AllowIndividualUserToManageTheirOwnMFA
            Effect: Allow
            Action:
              - iam:CreateVirtualMFADevice
              - iam:DeactivateMFADevice
              - iam:DeleteVirtualMFADevice
              - iam:RequestSmsMFARegistration
              - iam:FinalizeSmsMFARegistration
              - iam:EnableMFADevice
              - iam:ResyncMFADevice
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:mfa/${!aws:username}'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'

  RequireMFAPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Denies access to APIs unless MFA token is present
      ManagedPolicyName: require-mfa
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: BlockAnyAccessIfNotMfaAuthenticated
            Effect: Deny
            # We cannot apply this rule to all actions to let users (1) perform the
            # initial password change and (2) setup their MFA device
            NotAction:
              # To see users in the console
              - iam:ListAccountAliases
              - iam:ListUsers
              - iam:GetAccountSummary
              - iam:GetLoginProfile

              # To perform the initial password change
              - iam:ChangePassword
              - iam:GetAccountPasswordPolicy

              # To setup MFA
              - iam:CreateVirtualMFADevice
              - iam:EnableMFADevice
              - iam:ListVirtualMFADevices
              - iam:ListMFADevices
            Resource: '*'
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false

  ViewBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Provides access to billing information
      ManagedPolicyName: billing-read-only
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowToViewBillingInformation
            Effect: Allow
            Action:
              - aws-portal:View*
              - ce:Describe*
              - ce:Get*
              - ce:List*
              - cur:DescribeReportDefinitions
            Resource: '*'
          - Sid: LimitAccessToRootOnlyAPIs
            Effect: Deny
            Action:
              - aws-portal:ViewPaymentMethods
              - aws-portal:ModifyAccount
              - aws-portal:ModifyBilling
              - aws-portal:ModifyPaymentMethods
            Resource: '*'

  PowerUserAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Provides power-user-access to the account
      ManagedPolicyName: power-user-access
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PlaceholderForFutureAccess
            Effect: Allow
            Action:
              - 's3:GetObject'
            Resource: '*'

  ## Groups ##
  AllUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: all-users
      ManagedPolicyArns:
        - !Ref RequireMFAPolicy
        - !Ref ManagePersonalIAMSettingsPolicy
      Path: /

  ReadOnlyUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: read-only-users
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'
      Path: /
      Policies:
        - PolicyName: cloudformation-validate-template
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowValidateTemplate
                Effect: Allow
                Action: 'cloudformation:ValidateTemplate'
                Resource: '*'

  AdminUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: admin-users
      ManagedPolicyArns:
        - !Ref ElevateToAccountAdmin
        - !Ref ViewBillingPolicy
      Path: /

  PowerUsers:
    Type: AWS::IAM::Group
    Properties:
      GroupName: power-users
      ManagedPolicyArns:
        - !Ref ElevateToPowerUserAccess
      Path: /

Outputs:
  AccountAdminRole:
    Description: The ARN of the role that has full access to the account
    Value: !GetAtt AccountAdmin.Arn

  ElevateToAccountAdminPolicy:
    Description: The ARN of the policy that allows entities to assume the account admin role
    Value: !Ref ElevateToAccountAdmin

  ManagePersonalIAMSettingsPolicy:
    Description: The ARN of the policy that allows users to manage their own IAM settings
    Value: !Ref ManagePersonalIAMSettingsPolicy

  RequireMFAPolicy:
    Description: The ARN of the policy that enforces MFA for all access
    Value: !Ref RequireMFAPolicy

  AllUsersGroup:
    Description: The ARN for the all-users group
    Value: !Ref AllUsers

  ReadOnlyUsersGroup:
    Description: The ARN for the read-only-users group
    Value: !Ref ReadOnlyUsers

  AdminUsersGroup:
    Description: The ARN for the admin-users group
    Value: !Ref AdminUsers
