AWSTemplateFormatVersion: 2010-09-09
Description: VPC and networking infrastructure for the account

Parameters:
  VpcCidr:
    Description: The CIDR for the VPC
    Type: String
    Default: "10.0.0.0/16"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PublicACidr:
    Description: The CIDR for the public subnet in the first AZ
    Type: String
    Default: "10.0.1.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PublicBCidr:
    Description: The CIDR for the public subnet in the second AZ
    Type: String
    Default: "10.0.2.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PrivateACidr:
    Description: The CIDR for the private subnet in the first AZ
    Type: String
    Default: "10.0.3.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PrivateBCidr:
    Description: The CIDR for the private subnet in the first AZ
    Type: String
    Default: "10.0.4.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  NatACidr:
    Description: The CIDR for the Nat subnet in the first AZ
    Type: String
    Default: "10.0.5.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  NatBCidr:
    Description: The CIDR for the Nat subnet in the first AZ
    Type: String
    Default: "10.0.6.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PrivateWithEndpointsACidr:
    Description: The CIDR for the private subnet with VPC endpoints in the first AZ
    Type: String
    Default: "10.0.7.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

  PrivateWithEndpointsBCidr:
    Description: The CIDR for the private subnet with VPC endpoints in the second AZ
    Type: String
    Default: "10.0.8.0/24"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid CIDR range of the form x.x.x.x/x."

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-vpc" }

  VpcDhcpOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      # Note: Does not work in us-east-1
      DomainName: !Sub "${AWS::Region}.compute.internal"
      DomainNameServers:
        - AmazonProvidedDNS

  VpcDhcpOptionsAssoc:
    Type: "AWS::EC2::VPCDHCPOptionsAssociation"
    Properties:
      DhcpOptionsId: !Ref VpcDhcpOptions
      VpcId: !Ref Vpc

  VpcIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-igw" }

  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref VpcIgw

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "*"
            Resource: "arn:aws:s3:::*"
      RouteTableIds:
        - !Ref PrivateWithEndpointsRouteTable
        - !Ref NatARouteTable
        - !Ref NatBRouteTable
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref Vpc

  DynamoEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "*"
            Resource: "arn:aws:dynamodb:::*"
      RouteTableIds:
        - !Ref PrivateWithEndpointsRouteTable
        - !Ref NatARouteTable
        - !Ref NatBRouteTable
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.dynamodb"
      VpcId: !Ref Vpc

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-rt-private" }

  PrivateWithEndpointsRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - {
            Key: Name,
            Value: !Sub "${AWS::StackName}-rt-private-with-endpoints",
          }

  NatARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-rt-nat-a" }

  NatBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-rt-nat-b" }

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-rt-public" }

  PublicRouteTableRouteToIPv4Internet:
    Type: AWS::EC2::Route
    DependsOn:
      - VpcIgwAttachment
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref VpcIgw
      RouteTableId: !Ref PublicRouteTable

  ## Public subnets ##
  PublicA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref PublicACidr
      MapPublicIpOnLaunch: True
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-public-a" }
        - { Key: kubernetes.io/role/elb, Value: "1" }
      VpcId: !Ref Vpc

  PublicB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref PublicBCidr
      MapPublicIpOnLaunch: True
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-public-b" }
        - { Key: kubernetes.io/role/elb, Value: "1" }
      VpcId: !Ref Vpc

  PublicART:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicA

  PublicBRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicB

  ## Private Subnets ##
  PrivateA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref PrivateACidr
      MapPublicIpOnLaunch: False
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-private-a" }
      VpcId: !Ref Vpc

  PrivateB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref PrivateBCidr
      MapPublicIpOnLaunch: True
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-private-b" }
      VpcId: !Ref Vpc

  PrivateART:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateA

  PrivateBRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateB

  ## Nat Subnets ##
  NatA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref NatACidr
      MapPublicIpOnLaunch: False
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-nat-a" }
        - { Key: kubernetes.io/role/internal-elb, Value: "1" }
      VpcId: !Ref Vpc

  NatB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref NatBCidr
      MapPublicIpOnLaunch: False
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-nat-b" }
        - { Key: kubernetes.io/role/internal-elb, Value: "1" }
      VpcId: !Ref Vpc

  NatART:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref NatARouteTable
      SubnetId: !Ref NatA
  NatBRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref NatARouteTable
      SubnetId: !Ref NatB

  ## Private + Endpoints Subnets ##
  PrivateWithEndpointsA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref PrivateWithEndpointsACidr
      MapPublicIpOnLaunch: False
      Tags:
        - {
            Key: Name,
            Value: !Sub "${AWS::StackName}-private-with-endpoints-a",
          }
      VpcId: !Ref Vpc

  PrivateWithEndpointsB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: !Ref PrivateWithEndpointsBCidr
      MapPublicIpOnLaunch: False
      Tags:
        - {
            Key: Name,
            Value: !Sub "${AWS::StackName}-private-with-endpoints-b",
          }
      VpcId: !Ref Vpc

  PrivateWithEndpointsART:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateWithEndpointsRouteTable
      SubnetId: !Ref PrivateWithEndpointsA

  PrivateWithEndpointsBRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PrivateWithEndpointsRouteTable
      SubnetId: !Ref PrivateWithEndpointsB

Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref Vpc
    Export:
      Name: infra-vpc-VpcId

  VpcIpv4Cidr:
    Description: The IPv4 CIDR for the VPC
    Value: !GetAtt Vpc.CidrBlock
    Export:
      Name: infra-vpc-VpcIpv4Cidr

  PrivateRouteTable:
    Description: The ID of the private route table of the VPC
    Value: !Ref PrivateRouteTable
    Export:
      Name: infra-vpc-PrivateRouteTable

  PrivateWithEndpointsRouteTable:
    Description: The ID of the private-with-vpc-endpoints route table of the VPC
    Value: !Ref PrivateWithEndpointsRouteTable
    Export:
      Name: infra-vpc-PrivateWithEndpointsRouteTable

  NatARouteTable:
    Description: The ID of the NAT route table of the VPC for AZ-A
    Value: !Ref NatARouteTable
    Export:
      Name: infra-vpc-NatARouteTable

  NatBRouteTable:
    Description: The ID of the NAT route table of the VPC for AZ-B
    Value: !Ref NatBRouteTable
    Export:
      Name: infra-vpc-NatBRouteTable

  PublicRouteTable:
    Description: The ID of the public route table of the VPC
    Value: !Ref PublicRouteTable
    Export:
      Name: infra-vpc-PublicRouteTable

  PublicA:
    Description: ID of the public subnet in first AZ
    Value: !Ref PublicA
    Export:
      Name: infra-vpc-sn-public-a

  PublicB:
    Description: ID of the public subnet in second AZ
    Value: !Ref PublicB
    Export:
      Name: infra-vpc-sn-public-b

  PrivateA:
    Description: ID of the private subnet in first AZ
    Value: !Ref PrivateA
    Export:
      Name: infra-vpc-sn-private-a

  PrivateB:
    Description: ID of the private subnet in second AZ
    Value: !Ref PrivateB
    Export:
      Name: infra-vpc-sn-private-b

  NatA:
    Description: ID of the NAT subnet in first AZ
    Value: !Ref NatA
    Export:
      Name: infra-vpc-sn-nat-a

  NatB:
    Description: ID of the NAT subnet in second AZ
    Value: !Ref NatB
    Export:
      Name: infra-vpc-sn-nat-b

  PrivateWithEndpointsA:
    Description: ID of the private subnet in first AZ
    Value: !Ref PrivateWithEndpointsA
    Export:
      Name: infra-vpc-sn-private-with-endpoints-a

  PrivateWithEndpointsB:
    Description: ID of the private subnet in second AZ
    Value: !Ref PrivateWithEndpointsB
    Export:
      Name: infra-vpc-sn-private-with-endpoints-b