AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::LanguageExtensions
Description: AWS Organizations - Policies and policy attachments

Parameters:
  BackupAccountId:
    Type: String
  SuspendedOu:
    Type: String
  MembersOu:
    Type: String

Resources:
  BackupProtection:
    Type: AWS::Organizations::Policy
    Properties:
      Content:
        Fn::ToJsonString:
          Version: "2012-10-17"
          Statement:
            - Sid: Statement1
              Effect: Deny
              NotAction:
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - s3:DeleteObject
                - s3:Get*
                - s3:ListBucket
                - s3:ListBucketVersions
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:List*
              Resource: '*'
      Description: Blocks all unnecessary access to Backup account to prevent all account principals from permanently destroying backups.
      Name: !Sub ${AWS::StackName}-BackupProtection
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-BackupProtection' }
      TargetIds:
        - !Ref BackupAccountId
      Type: SERVICE_CONTROL_POLICY

  Suspended:
    Type: AWS::Organizations::Policy
    Properties:
      Content:
        Fn::ToJsonString:
          Version: "2012-10-17"
          Statement:
            - Sid: Statement1
              Effect: Deny
              Action: '*'
              Resource: '*'
      Description: SCP for suspended accounts
      Name: !Sub ${AWS::StackName}-Suspended
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-Suspended' }
      TargetIds:
        - !Ref SuspendedOu
      Type: SERVICE_CONTROL_POLICY

  DefaultMemberLimits:
    Type: AWS::Organizations::Policy
    Properties:
      Content:
        Fn::ToJsonString:
          Version: '2012-10-17'
          Statement:
          - Sid: DenyRootUser
            Effect: Deny
            Action: "*"
            Resource: "*"
            Condition:
              StringLike:
                aws:PrincipalArn: arn:aws:iam::*:root
          - Sid: DenyAccountSettingsChanges
            Action:
            - account:CloseAccount
            - account:PutChallengeQuestions
            - account:PutContactInformation
            - billing:PutContractInformation
            - billing:UpdateBillingPreferences
            - payments:CreatePaymentInstrument
            - payments:DeletePaymentInstrument
            - payments:MakePayment
            - payments:UpdatePaymentPreferences
            - tax:BatchPutTaxRegistration
            - tax:DeleteTaxRegistration
            - tax:PutTaxInheritance
            Resource: "*"
            Effect: Deny
          - Effect: Deny
            Action: organizations:LeaveOrganization
            Resource: "*"
          - Sid: DenyIamUserAccessKeys
            Effect: Deny
            Action:
            - iam:CreateAccessKey
            Resource: "*"
          # https://gist.github.com/iann0036/b473bbb3097c5f4c656ed3d07b4d2222 + a few more
          - Sid: DenyExpensiveOperations
            Effect: Deny
            Action:
            - acm-pca:CreateCertificateAuthority
            - aws-marketplace:AcceptAgreementApprovalRequest
            - aws-marketplace:Subscribe
            - backup:PutBackupVaultLockConfiguration
            - bedrock:CreateProvisionedModelThroughput
            - bedrock:UpdateProvisionedModelThroughput
            - dynamodb:PurchaseReservedCapacityOfferings
            - ec2:AcceptReservedInstancesExchangeQuote
            - ec2:CancelReservedInstancesListing
            - ec2:CreateReservedInstancesListing
            - ec2:DeleteQueuedReservedInstances
            - ec2:GetReservedInstancesExchangeQuote
            - ec2:ModifyReservedInstances
            - ec2:PurchaseHostReservation
            - ec2:PurchaseReservedInstancesOffering
            - ec2:PurchaseScheduledInstances
            - elasticache:PurchaseReservedCacheNodesOffering
            - es:PurchaseReservedInstanceOffering
            - es:PurchaseReservedElasticsearchInstanceOffering
            - rds:PurchaseReservedDBInstancesOffering
            - redshift:AcceptReservedNodeExchange
            - redshift:GetReservedNodeExchangeOfferings
            - redshift:PurchaseReservedNodeOffering
            - route53domains:RegisterDomain
            - route53domains:RenewDomain
            - route53domains:TransferDomain
            - s3-object-lambda:PutObjectLegalHold
            - s3-object-lambda:PutObjectRetention
            - s3:BypassGovernanceRetention
            - s3:PutBucketObjectLockConfiguration
            - s3:PutObjectLegalHold
            - s3:PutObjectRetention
            - savingsplans:CreateSavingsPlan
            - shield:CreateSubscription
            - snowball:CreateCluster
            Resource: "*"
          # https://docs.aws.amazon.com/controltower/latest/userguide/primary-region-deny-policy.html
          - Sid: BlockNonStandardRegions
            NotAction:
            - a4b:*
            - access-analyzer:*
            - account:*
            - acm:*
            - activate:*
            - artifact:*
            - aws-marketplace-management:*
            - aws-marketplace:*
            - aws-portal:*
            - billing:*
            - billingconductor:*
            - budgets:*
            - ce:*
            - chatbot:*
            - chime:*
            - cloudfront:*
            - cloudtrail:LookupEvents
            - compute-optimizer:*
            - config:*
            - consoleapp:*
            - consolidatedbilling:*
            - cur:*
            - datapipeline:GetAccountLimits
            - devicefarm:*
            - directconnect:*
            - discovery-marketplace:*
            - ec2:DescribeRegions
            - ec2:DescribeTransitGateways
            - ec2:DescribeVpnGateways
            - ecr-public:*
            - fms:*
            - freetier:*
            - globalaccelerator:*
            - health:*
            - iam:*
            - importexport:*
            - invoicing:*
            - iq:*
            - kms:*
            - license-manager:ListReceivedLicenses
            - lightsail:Get*
            - mobileanalytics:*
            - networkmanager:*
            - notifications-contacts:*
            - notifications:*
            - organizations:*
            - payments:*
            - pricing:*
            - resource-explorer-2:*
            - route53-recovery-cluster:*
            - route53-recovery-control-config:*
            - route53-recovery-readiness:*
            - route53:*
            - route53domains:*
            - s3:CreateMultiRegionAccessPoint
            - s3:DeleteMultiRegionAccessPoint
            - s3:DescribeMultiRegionAccessPointOperation
            - s3:GetAccountPublicAccessBlock
            - s3:GetBucketLocation
            - s3:GetBucketPolicyStatus
            - s3:GetBucketPublicAccessBlock
            - s3:GetMultiRegionAccessPoint
            - s3:GetMultiRegionAccessPointPolicy
            - s3:GetMultiRegionAccessPointPolicyStatus
            - s3:GetStorageLensConfiguration
            - s3:GetStorageLensDashboard
            - s3:ListAllMyBuckets
            - s3:ListMultiRegionAccessPoints
            - s3:ListStorageLensConfigurations
            - s3:PutAccountPublicAccessBlock
            - s3:PutMultiRegionAccessPointPolicy
            - savingsplans:*
            - shield:*
            - sso:*
            - sts:*
            - support:*
            - supportapp:*
            - supportplans:*
            - sustainability:*
            - tag:GetResources
            - tax:*
            - trustedadvisor:*
            - vendor-insights:ListEntitledSecurityProfiles
            - waf-regional:*
            - waf:*
            - wafv2:*
            - wellarchitected:*
            Resource: "*"
            Effect: Deny
            Condition:
              StringNotEquals:
                aws:RequestedRegion:
                - eu-west-1
                - eu-north-1
                - us-east-1
                - us-west-2
                - us-east-2
      Description: Default limits for all member accounts
      Name: !Sub ${AWS::StackName}-DefaultMemberLimits
      Tags:
        - { Key: Name, Value: !Sub '${AWS::StackName}-DefaultMemberLimits' }
      TargetIds:
        - !Ref MembersOu
      Type: SERVICE_CONTROL_POLICY